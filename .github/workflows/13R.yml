name: Build OnePlus Ace 13R

on:
  workflow_call:  # This allows this workflow to be called from another workflow
  workflow_dispatch:
   
jobs:
  build-kernel-a14-6-1-kernelsu-susfs:
    runs-on: ubuntu-22.04

    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 8192
          temp-reserve-mb: 4096
          swap-size-mb: 8192
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'

      - name: Get build space
        run: |
          free -h
          df -h
          
      - name: Set CONFIG Environment Variable
        run: |
          # Set CONFIG dynamically based on matrix values
          CONFIG="13R"
          
          # Set CONFIG as an environment variable for future steps
          echo "CONFIG=$CONFIG" >> $GITHUB_ENV
          
          echo "CONFIG set to: $CONFIG"
      
      - name: Install Repo
        run: |
          sudo apt-get update
          sudo apt-get install -y repo

      - name: Define branch names
        run: |
          ANYKERNEL_BRANCH="your-branch-name" # Set the variable here
          SUSFS_BRANCH="gki-android14-6.1"
          echo "Using branch for AnyKernel3: $ANYKERNEL_BRANCH"
          echo "Using branch for SUSFS: $SUSFS_BRANCH"
      
      - name: Clone repositories
        run: |
          git clone https://github.com/Kernel-SU/AnyKernel3 --depth=1
          git clone https://gitlab.com/simonpunk/susfs4ksu.git -b "$SUSFS_BRANCH"
          git clone https://github.com/TheWildJames/kernel_patches.git

      - name: Create folder for configuration
        run: |
          mkdir -p "$CONFIG"
          cd "$CONFIG"
          echo "Initializing and syncing kernel source..."
          repo init -u https://github.com/OnePlusOSS/kernel_manifest.git -b oneplus/sm8650 -m oneplus_13r.xml --depth=1
          repo sync -c -j$(nproc --all) --no-tags --fail-fast

      - name: Add KernelSU-Next
        run: |
          echo "Changing to configuration directory: $CONFIG..."
          cd "$CONFIG/kernel_platform"
          echo "Adding KernelSU..."
          curl -LSs "https://raw.githubusercontent.com/rifsxd/KernelSU-Next/next/kernel/setup.sh" | bash -s next
          cd ./KernelSU-Next/kernel
          ls -la /home/runner/work/Action-KernelSU-Next/Action-KernelSU-Next/13R/kernel_platform/KernelSU-Next/
          sed -i 's/ccflags-y += -DKSU_VERSION=11998/ccflags-y += -DKSU_VERSION=12439/' ./Makefile
          
      - name: Apply SUSFS Patches
        run: |
          echo "Changing to configuration directory: $CONFIG..."
          cd "$CONFIG/kernel_platform"
          
          echo "Applying SUSFS patches..."
          
          cp /home/runner/work/Action-KernelSU-Next/Action-KernelSU-Next/susfs4ksu/kernel_patches/50_add_susfs_in_gki-android14-6.1.patch ./common/
          cp /home/runner/work/Action-KernelSU-Next/Action-KernelSU-Next/susfs4ksu/kernel_patches/fs/* ./common/fs/
          cp /home/runner/work/Action-KernelSU-Next/Action-KernelSU-Next/susfs4ksu/kernel_patches/include/linux/* ./common/include/linux/
          cd ./KernelSU-Next
          cd ../common
          patch -p1 < 50_add_susfs_in_gki-android14-6.1.patch || true
          
      - name: Apply Next-SUSFS Patches
        run: |
          ls -la /home/runner/work/Action-KernelSU-Next/Action-KernelSU-Next/13R/kernel_platform/
          echo "Changing to configuration directory: $CONFIG..."
          cd /home/runner/work/Action-KernelSU-Next/Action-KernelSU-Next/13R/kernel_platform/
          cd ./KernelSU-Next
          echo "Applying next SUSFS patches..."
          cp /home/runner/work/Action-KernelSU-Next/Action-KernelSU-Next/kernel_patches/next/0001-kernel-patch-susfs-v1.5.5-to-KernelSU-Next-v1.0.5.patch ./
          patch -p1 --forward < 0001-kernel-patch-susfs-v1.5.5-to-KernelSU-Next-v1.0.5.patch || true
          cd /home/runner/work/Action-KernelSU-Next/Action-KernelSU-Next/13R/kernel_platform/common
          cp /home/runner/work/Action-KernelSU-Next/Action-KernelSU-Next/kernel_patches/next/next_hooks.patch ./
          patch -p1 -F 3 < next_hooks.patch
          
      - name: Apply Hide Stuff Patches
        run: |
          echo "Changing to configuration directory: $CONFIG..."
          cd /home/runner/work/Action-KernelSU-Next/Action-KernelSU-Next/13R/kernel_platform/common
          cp /home/runner/work/Action-KernelSU-Next/Action-KernelSU-Next/kernel_patches/69_hide_stuff.patch ./
          patch -p1 -F 3 < 69_hide_stuff.patch || true
      
      - name: Add SUSFS Configuration Settings
        run: |
          echo "Changing to configuration directory: $CONFIG..."
          cd "$CONFIG/kernel_platform"
          
          echo "Adding configuration settings to gki_defconfig..."
          
          echo "CONFIG_KSU_WITH_KPROBES=n" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_SU=n" >> ./common/arch/arm64/configs/gki_defconfig 
          echo "CONFIG_KSU_SUSFS_SUS_OVERLAYFS=n" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_HAS_MAGIC_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_PATH=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_AUTO_ADD_SUS_KSU_DEFAULT_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_AUTO_ADD_SUS_BIND_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_KSTAT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_TRY_UMOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_AUTO_ADD_TRY_UMOUNT_FOR_BIND_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SPOOF_UNAME=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_ENABLE_LOG=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_HIDE_KSU_SUSFS_SYMBOLS=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SPOOF_CMDLINE_OR_BOOTCONFIG=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_OPEN_REDIRECT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_TMPFS_XATTR=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_TMPFS_POSIX_ACL=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_IP_NF_TARGET_TTL=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_IP6_NF_TARGET_HL=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_IP6_NF_MATCH_HL=y" >> ./common/arch/arm64/configs/gki_defconfig
          
      - name: Run sed and perl Commands
        run: |
          echo "Changing to configuration directory: $CONFIG..."
          cd "$CONFIG/kernel_platform"
          
          echo "Running sed commands..."
          
          sed -i 's/check_defconfig//' ./common/build.config.gki
          sed -i '$s|echo "\$res"|echo "\$res-VFS"|' ./common/scripts/setlocalversion
          sed -i "/stable_scmversion_cmd/s/-maybe-dirty//g" ./build/kernel/kleaf/impl/stamp.bzl
          sed -i 's/-dirty//' ./common/scripts/setlocalversion
          perl -pi -e 's{UTS_VERSION="\$\(echo \$UTS_VERSION \$CONFIG_FLAGS \$TIMESTAMP \| cut -b -\$UTS_LEN\)"}{UTS_VERSION="#1 SMP PREEMPT Sat Apr 20 04:20:00 UTC 2024"}' ./common/scripts/mkcompile_h
          
      - name: Build the Kernel
        run: |
          echo "Changing to configuration directory: $CONFIG..."
          cd "$CONFIG"
          
          echo "Building the kernel..."
          rm -rf ./kernel_platform/common/android/abi_gki_protected_exports_*
          ./kernel_platform/oplus/build/oplus_build_kernel.sh pineapple gki
      
      - name: Create Bootimgs Folder and Copy Images
        run: |
          echo "Changing to configuration directory: $CONFIG..."
          cd "$CONFIG"
          
          echo "Copying Image"
          cp ./out/dist/Image ../AnyKernel3/Image
          
      - name: Create ZIP Files for Different Formats
        run: |
          echo "Creating zip files for all formats..."
          cd ./AnyKernel3
          
          ZIP_NAME="Anykernel3-13R-KSU.zip"
          echo "Creating zip file $ZIP_NAME..."
          zip -r "../$ZIP_NAME" ./*
          
      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: kernel-${{ env.CONFIG }}
          path: |
